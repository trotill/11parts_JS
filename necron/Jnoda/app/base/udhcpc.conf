#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>
echo udhcp script
[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

# return 0 if root is mounted on a network filesystem
root_is_nfs() {
	sed -n 's/^[^ ]* \([^ ]*\) \([^ ]*\) .*$/\1 \2/p' /proc/mounts |
	grep -q "^/ \(nfs\|smbfs\|ncp\|coda\)$"
}

have_bin_ip=0
if [ -x /sbin/ip ]; then
  have_bin_ip=1
  BROADCAST="broadcast +"
fi

[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"

#echo Case $1
case "$1" in
	deconfig)
		if [ -x /sbin/resolvconf ]; then
			/sbin/resolvconf -d "${interface}.udhcpc"
		fi
		if ! root_is_nfs ; then
                        if [ $have_bin_ip -eq 1 ]; then
                                #/sbin/ip addr flush dev $interface
                                /sbin/ip link set dev $interface up
                        else
                                /sbin/ifconfig $interface 0.0.0.0
                        fi
		fi
		;;

	renew|bound)

        DNS=[
        CN="0"
		for i in $dns; do
			echo "$0: Adding DNS $i"
			#echo CN $CN
			 
			if [ $CN != "0" ]
			then
			    DNS=$DNS','
			fi
			
			DNS=$DNS\"$i\"
			let CN=CN+1
		done
        DNS=$DNS]
        
        echo Found DHCP server router $router siaddr $siaddr
        metric=10
		if [ -n "$router" ] ; then
			for i in $router ; do
			    echo '{"if":"'$interface'","dns":'$DNS',"gw":"'$i'","metric":"'$metric'","ip":"'$ip'","mask":"'$mask'","bcast":"'$broadcast'"}'>/run/$interface.dhcp
                metric=$(($metric + 1)) 
			done
			/sbin/ip addr add dev $interface local $ip/$mask $BROADCAST
		else
          if [ -n "$siaddr" ] ; then
 			echo '{"if":"'$interface'","dns":'$DNS',"gw":"'$siaddr'","metric":"'$metric'","ip":"'$ip'","mask":"'$mask'","bcast":"'$broadcast'"}'>/run/$interface.dhcp
            metric=$(($metric + 1))
 			/sbin/ip addr add dev $interface local $ip/$mask $BROADCAST
 		  fi
 		fi
         
 

       #  echo ip route add default via $i dev $interface
       #  /sbin/ip route add default via $i dev $interface

		# Update resolver configuration file
		#R=""
		#[ -n "$domain" ] && R="domain $domain
#"
#		for i in $dns; do
#			echo "$0: Adding DNS $i"
#			R="${R}nameserver $i
#"
#		done

		#if [ -x /sbin/resolvconf ]; then
		#	echo -n "$R" | /sbin/resolvconf -a "${interface}.udhcpc"
		#else
			#echo -n "$R" > "$RESOLV_CONF"
		#fi
		;;
esac

exit 0
